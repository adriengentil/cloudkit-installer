apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: cloudkit-aap-development

# Development environment annotations
commonAnnotations:
  environment: development

labels:
  - includeSelectors: true
    pairs:
      environment: development
      app.kubernetes.io/managed-by: kustomize

resources:
- ../../../base/cloudkit-aap

namespace: foobar
namePrefix: dev-

secretGenerator:
  - name: foo-bar-config-as-code-ig
    envs:
    - config-as-code-ig.yaml
    options:
      disableNameSuffixHash: true
  - name: foo-bar-config-as-code-manifest-ig
    files:
    - license.zip=License.zip
    options:
      disableNameSuffixHash: true
  - name: quay-pull-secret
    type: kubernetes.io/dockerconfigjson
    files:
      - .dockerconfigjson=dockerconfig.json
  - name: cloudkit-admin-password
    literals:
      - password=placeholder
    options:
      disableNameSuffixHash: true
  
replacements:
  - source:
      kind: Secret
      name: foo-bar-config-as-code-ig
      fieldPath: metadata.name
    targets:
      - select:
          kind: Job
        fieldPaths:
          - spec.template.spec.containers.*.envFrom.*.secretRef.name
  - source:
      kind: Secret
      name: foo-bar-config-as-code-manifest-ig
      fieldPath: metadata.name
    targets:
      - select:
          kind: Job
        fieldPaths:
          - spec.template.spec.volumes.[name=config-as-code-manifest-volume].secret.secretName
  - source:
      kind: Secret
      name: cloudkit-admin-password
      fieldPath: metadata.name
    targets:
      - select:
          kind: Job
        fieldPaths:
          - spec.template.spec.containers.*.env.[name=AAP_PASSWORD].valueFrom.secretKeyRef.name
  - source:
      kind: OperatorGroup
      name: ansible-automation-platform-operator
      fieldPath: metadata.namespace
    targets:
      - select:
          kind: OperatorGroup
          name: ansible-automation-platform-operator
        fieldPaths:
          - spec.targetNamespaces.0

patches:
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/image
      value: quay.io/rh-ee-jkary/cloudkit-aap-ee:latest
    - op: add
      path: /spec/template/spec/initContainers
      value:
        - name: wait-for-aap
          image: registry.redhat.io/ubi8/ubi-minimal:latest
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for AAP controller to be ready..."
              microdnf install -y curl
              for i in $(seq 1 30); do
                echo "Attempt $i/30: Checking AAP controller readiness..."
                if curl -s -k -f https://dev-cloudkit-controller-foobar.apps.acm.local.lab/api/v2/ping/ | grep -q '"version"'; then
                  echo "AAP controller is ready!"
                  exit 0
                fi
                echo "Controller not ready, waiting 60 seconds..."
                sleep 60
              done
              echo "Timeout waiting for AAP controller"
              exit 1
  target:
    kind: Job
    name: aap-bootstrap
